name: backend-lint-with-frontend-build

on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/golangci-lint.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: lint-with-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: pnpm
          cache-dependency-path: frontend/pnpm-lock.yaml
      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build frontend into backend/cmd/app/dist
        run: pnpm run build-back

  lint-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go (from backend/go.mod)
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          check-latest: true

      - name: Cache Go build & mod
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: backend
          args: --timeout=5m
          # only-new-issues: true
